 ##MybatisProperties
# 应用名称
spring.application.name=community
#下面这些内容是为了让MyBatis映射
#指定Mybatis的Mapper文件
mybatis.mapper-locations=classpath:mappers/*xml
#指定Mybatis的实体目录
mybatis.type-aliases-package=com.guan.community.entity
#驼峰
mybatis.configuration.map-underscore-to-camel-case=true
#自动生成主键
mybatis.configuration.use-generated-keys=true

# THYMELEAF (ThymeleafAutoConfiguration)
# 开启模板缓存（默认值： true ）
spring.thymeleaf.cache=true
# 检查模板是否存在，然后再呈现
spring.thymeleaf.check-template=true
# 检查模板位置是否正确（默认值 :true ）
spring.thymeleaf.check-template-location=true
#Content-Type 的值（默认值： text/html ）
spring.thymeleaf.content-type=text/html
# 开启 MVC Thymeleaf 视图解析（默认值： true ）
spring.thymeleaf.enabled=true
# 模板编码
spring.thymeleaf.encoding=UTF-8
# 要被排除在解析之外的视图名称列表，⽤逗号分隔
spring.thymeleaf.excluded-view-names=
# 要运⽤于模板之上的模板模式。另⻅ StandardTemplate-ModeHandlers( 默认值： HTML5)
spring.thymeleaf.mode=HTML
# 在构建 URL 时添加到视图名称前的前缀（默认值： classpath:/templates/ ）
spring.thymeleaf.prefix=classpath:/templates/
# 在构建 URL 时添加到视图名称后的后缀（默认值： .html ）
spring.thymeleaf.suffix=.html

# 数据库驱动：
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
# 数据源名称
spring.datasource.name=defaultDataSource
# 数据库连接地址
spring.datasource.url=jdbc:mysql://localhost:3306/community?serverTimezone=UTC
# 数据库用户名&密码：
spring.datasource.username=root
spring.datasource.password=root123
# 应用服务 WEB 访问端口
server.port=8080


#MailProperties
spring.mail.host=smtp.qq.com
spring.mail.port=465
spring.mail.username=3088709672@qq.com
spring.mail.password=uyyjvxscllakdgge
spring.mail.protocol=smtps
spring.mail.properties.mail.smtp.ssl.enable=true

#community
community.path.domain=http://localhost:8080
server.servlet.context-path=/community
community.path.upload=D:/Study/BackEnd/java/community/load

# 上传单个文件的最大值为10MB
spring.servlet.multipart.max-file-size=10MB
# 单次请求中, 上传的所有文件总大小最大为10MB
spring.servlet.multipart.max-request-size=10MB


#redisProperties
spring.redis.database=11
spring.redis.host=localhost
spring.redis.port=6379

#KafkaProperties
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=community-consumer-group
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=3000

#elasticsearchProperties
spring.data.elasticsearch.cluster-name=guan
spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300